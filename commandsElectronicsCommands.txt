/////Open a command terminal with in Electronics-network folder, let's call this terminal as host terminal

cd Electronics-network/

############## host terminal ##############

------------Register the ca admin for each organization—----------------

//Build the docker-compose-ca.yaml in the docker folder

docker-compose -f docker/docker-compose-ca.yaml up -d

sudo chmod -R 777 organizations/

------------Register and enroll the users for each organization—-----------

//Build the registerEnroll.sh script file

chmod +x registerEnroll.sh

./registerEnroll.sh

—-------------Build the infrastructure—-----------------

//Build the docker-compose-3org.yaml in the docker folder

docker-compose -f docker/docker-compose-3org.yaml up -d

-------------Generate the genesis block—-------------------------------

//Build the configtx.yaml file in the config folder

export FABRIC_CFG_PATH=./config

export CHANNEL_NAME=electronicschannel

configtxgen -profile ThreeOrgsChannel -outputBlock ./channel-artifacts/${CHANNEL_NAME}.block -channelID $CHANNEL_NAME

------ Create the application channel------

export ORDERER_CA=./organizations/ordererOrganizations/electronics.com/orderers/orderer.electronics.com/msp/tlscacerts/tlsca.electronics.com-cert.pem

export ORDERER_ADMIN_TLS_SIGN_CERT=./organizations/ordererOrganizations/electronics.com/orderers/orderer.electronics.com/tls/server.crt

export ORDERER_ADMIN_TLS_PRIVATE_KEY=./organizations/ordererOrganizations/electronics.com/orderers/orderer.electronics.com/tls/server.key

osnadmin channel join --channelID $CHANNEL_NAME --config-block ./channel-artifacts/$CHANNEL_NAME.block -o localhost:7053 --ca-file $ORDERER_CA --client-cert $ORDERER_ADMIN_TLS_SIGN_CERT --client-key $ORDERER_ADMIN_TLS_PRIVATE_KEY

osnadmin channel list -o localhost:7053 --ca-file $ORDERER_CA --client-cert $ORDERER_ADMIN_TLS_SIGN_CERT --client-key $ORDERER_ADMIN_TLS_PRIVATE_KEY

/////Open another terminal with in Electronics-network folder, let's call this terminal as peer0_Manufacturer terminal.

############## peer0_Manufacturer terminal ##############

// Build the core.yaml in peercfg folder


export FABRIC_CFG_PATH=./peercfg
export CHANNEL_NAME=electronicschannel
export CORE_PEER_LOCALMSPID=ManufacturerMSP
export CORE_PEER_TLS_ENABLED=true
export CORE_PEER_TLS_ROOTCERT_FILE=${PWD}/organizations/peerOrganizations/manufacturer.electronics.com/peers/peer0.manufacturer.electronics.com/tls/ca.crt
export CORE_PEER_MSPCONFIGPATH=${PWD}/organizations/peerOrganizations/manufacturer.electronics.com/users/Admin@manufacturer.electronics.com/msp
export CORE_PEER_ADDRESS=localhost:7051
export ORDERER_CA=${PWD}/organizations/ordererOrganizations/electronics.com/orderers/orderer.electronics.com/msp/tlscacerts/tlsca.electronics.com-cert.pem
export ORG1_PEER_TLSROOTCERT=${PWD}/organizations/peerOrganizations/manufacturer.electronics.com/peers/peer0.manufacturer.electronics.com/tls/ca.crt
export ORG2_PEER_TLSROOTCERT=${PWD}/organizations/peerOrganizations/ecom.electronics.com/peers/peer0.ecom.electronics.com/tls/ca.crt
export ORG3_PEER_TLSROOTCERT=${PWD}/organizations/peerOrganizations/delivery.electronics.com/peers/peer0.delivery.electronics.com/tls/ca.crt



—---------------Join peer to the channel—-------------

peer channel join -b ./channel-artifacts/$CHANNEL_NAME.block

peer channel list

/////Open another terminal with in Electronics-network folder, let's call this terminal as peer0_Ecom terminal.

############## peer0_Ecom terminal ##############

export FABRIC_CFG_PATH=./peercfg
export CHANNEL_NAME=electronicschannel 
export CORE_PEER_LOCALMSPID=EcomMSP 
export CORE_PEER_TLS_ENABLED=true
export CORE_PEER_ADDRESS=localhost:9051 
export CORE_PEER_TLS_ROOTCERT_FILE=${PWD}/organizations/peerOrganizations/ecom.electronics.com/peers/peer0.ecom.electronics.com/tls/ca.crt
export CORE_PEER_MSPCONFIGPATH=${PWD}/organizations/peerOrganizations/ecom.electronics.com/users/Admin@ecom.electronics.com/msp
export ORDERER_CA=${PWD}/organizations/ordererOrganizations/electronics.com/orderers/orderer.electronics.com/msp/tlscacerts/tlsca.electronics.com-cert.pem
export ORG1_PEER_TLSROOTCERT=${PWD}/organizations/peerOrganizations/manufacturer.electronics.com/peers/peer0.manufacturer.electronics.com/tls/ca.crt
export ORG2_PEER_TLSROOTCERT=${PWD}/organizations/peerOrganizations/ecom.electronics.com/peers/peer0.ecom.electronics.com/tls/ca.crt
export ORG3_PEER_TLSROOTCERT=${PWD}/organizations/peerOrganizations/delivery.electronics.com/peers/peer0.delivery.electronics.com/tls/ca.crt

—---------------Join peer to the channel—-------------

peer channel join -b ./channel-artifacts/$CHANNEL_NAME.block

peer channel list

/////Open another terminal with in Electronics-network folder, let's call this terminal as peer0_Delivery terminal.

############## peer0_Delivery terminal ##############

export FABRIC_CFG_PATH=./peercfg
export CHANNEL_NAME=electronicschannel 
export CORE_PEER_LOCALMSPID=DeliveryMSP 
export CORE_PEER_TLS_ENABLED=true
export CORE_PEER_ADDRESS=localhost:11051 
export CORE_PEER_TLS_ROOTCERT_FILE=${PWD}/organizations/peerOrganizations/delivery.electronics.com/peers/peer0.delivery.electronics.com/tls/ca.crt
export CORE_PEER_MSPCONFIGPATH=${PWD}/organizations/peerOrganizations/delivery.electronics.com/users/Admin@delivery.electronics.com/msp
export ORDERER_CA=${PWD}/organizations/ordererOrganizations/electronics.com/orderers/orderer.electronics.com/msp/tlscacerts/tlsca.electronics.com-cert.pem
export ORG1_PEER_TLSROOTCERT=${PWD}/organizations/peerOrganizations/manufacturer.electronics.com/peers/peer0.manufacturer.electronics.com/tls/ca.crt
export ORG2_PEER_TLSROOTCERT=${PWD}/organizations/peerOrganizations/ecom.electronics.com/peers/peer0.ecom.electronics.com/tls/ca.crt
export ORG3_PEER_TLSROOTCERT=${PWD}/organizations/peerOrganizations/delivery.electronics.com/peers/peer0.delivery.electronics.com/tls/ca.crt

—---------------Join peer to the channel—-------------

peer channel join -b ./channel-artifacts/$CHANNEL_NAME.block

peer channel list

—-------------anchor peer update—-----------

############## peer0_Manufacturer terminal ##############

peer channel fetch config channel-artifacts/config_block.pb -o localhost:7050 --ordererTLSHostnameOverride orderer.electronics.com -c $CHANNEL_NAME --tls --cafile $ORDERER_CA

cd channel-artifacts

configtxlator proto_decode --input config_block.pb --type common.Block --output config_block.json
jq '.data.data[0].payload.data.config' config_block.json > config.json

cp config.json config_copy.json

jq '.channel_group.groups.Application.groups.ManufacturerMSP.values += {"AnchorPeers":{"mod_policy": "Admins","value":{"anchor_peers": [{"host": "peer0.manufacturer.electronics.com","port": 7051}]},"version": "0"}}' config_copy.json > modified_config.json

configtxlator proto_encode --input config.json --type common.Config --output config.pb
configtxlator proto_encode --input modified_config.json --type common.Config --output modified_config.pb
configtxlator compute_update --channel_id ${CHANNEL_NAME} --original config.pb --updated modified_config.pb --output config_update.pb

configtxlator proto_decode --input config_update.pb --type common.ConfigUpdate --output config_update.json
echo '{"payload":{"header":{"channel_header":{"channel_id":"'$CHANNEL_NAME'", "type":2}},"data":{"config_update":'$(cat config_update.json)'}}}' | jq . > config_update_in_envelope.json
configtxlator proto_encode --input config_update_in_envelope.json --type common.Envelope --output config_update_in_envelope.pb

cd ..

peer channel update -f channel-artifacts/config_update_in_envelope.pb -c $CHANNEL_NAME -o localhost:7050  --ordererTLSHostnameOverride orderer.electronics.com --tls --cafile $ORDERER_CA

############## peer0_Ecom terminal ##############

peer channel fetch config channel-artifacts/config_block.pb -o localhost:7050 --ordererTLSHostnameOverride orderer.electronics.com -c $CHANNEL_NAME --tls --cafile $ORDERER_CA

cd channel-artifacts

configtxlator proto_decode --input config_block.pb --type common.Block --output config_block.json
jq '.data.data[0].payload.data.config' config_block.json > config.json
cp config.json config_copy.json

jq '.channel_group.groups.Application.groups.EcomMSP.values += {"AnchorPeers":{"mod_policy": "Admins","value":{"anchor_peers": [{"host": "peer0.ecom.electronics.com","port": 9051}]},"version": "0"}}' config_copy.json > modified_config.json

configtxlator proto_encode --input config.json --type common.Config --output config.pb
configtxlator proto_encode --input modified_config.json --type common.Config --output modified_config.pb
configtxlator compute_update --channel_id $CHANNEL_NAME --original config.pb --updated modified_config.pb --output config_update.pb

configtxlator proto_decode --input config_update.pb --type common.ConfigUpdate --output config_update.json
echo '{"payload":{"header":{"channel_header":{"channel_id":"'$CHANNEL_NAME'", "type":2}},"data":{"config_update":'$(cat config_update.json)'}}}' | jq . > config_update_in_envelope.json
configtxlator proto_encode --input config_update_in_envelope.json --type common.Envelope --output config_update_in_envelope.pb

cd ..

peer channel update -f channel-artifacts/config_update_in_envelope.pb -c $CHANNEL_NAME -o localhost:7050  --ordererTLSHostnameOverride orderer.electronics.com --tls --cafile $ORDERER_CA

############## peer0_Delivery terminal ##############

peer channel fetch config channel-artifacts/config_block.pb -o localhost:7050 --ordererTLSHostnameOverride orderer.electronics.com -c $CHANNEL_NAME --tls --cafile $ORDERER_CA

cd channel-artifacts

configtxlator proto_decode --input config_block.pb --type common.Block --output config_block.json
jq '.data.data[0].payload.data.config' config_block.json > config.json
cp config.json config_copy.json

jq '.channel_group.groups.Application.groups.DeliveryMSP.values += {"AnchorPeers":{"mod_policy": "Admins","value":{"anchor_peers": [{"host": "peer0.delivery.electronics.com","port": 11051}]},"version": "0"}}' config_copy.json > modified_config.json

configtxlator proto_encode --input config.json --type common.Config --output config.pb
configtxlator proto_encode --input modified_config.json --type common.Config --output modified_config.pb
configtxlator compute_update --channel_id $CHANNEL_NAME --original config.pb --updated modified_config.pb --output config_update.pb

configtxlator proto_decode --input config_update.pb --type common.ConfigUpdate --output config_update.json
echo '{"payload":{"header":{"channel_header":{"channel_id":"'$CHANNEL_NAME'", "type":2}},"data":{"config_update":'$(cat config_update.json)'}}}' | jq . > config_update_in_envelope.json
configtxlator proto_encode --input config_update_in_envelope.json --type common.Envelope --output config_update_in_envelope.pb

cd ..

peer channel update -f channel-artifacts/config_update_in_envelope.pb -c $CHANNEL_NAME -o localhost:7050  --ordererTLSHostnameOverride orderer.electronics.com --tls --cafile $ORDERER_CA

peer channel getinfo -c $CHANNEL_NAME

—-----------------Chaincode lifecycle—-------------------

//Build the chaincode (Change MSPId and collection file)

/// Make sure that KBA-Electronics chaincode is available in Chaincode folder which is in the same location of Electronics-network. 

############## peer0_Manufacturer terminal ##############

peer lifecycle chaincode package kbaelectronics.tar.gz --path ../Chaincode/ --lang golang --label kbaelectronics_1.0

peer lifecycle chaincode install kbaelectronics.tar.gz

peer lifecycle chaincode queryinstalled

export CC_PACKAGE_ID=$(peer lifecycle chaincode calculatepackageid kbaelectronics.tar.gz)

############## peer0_Ecom terminal ##############

peer lifecycle chaincode install kbaelectronics.tar.gz

export CC_PACKAGE_ID=$(peer lifecycle chaincode calculatepackageid kbaelectronics.tar.gz)


############## peer0_Delivery terminal ##############

peer lifecycle chaincode install kbaelectronics.tar.gz

export CC_PACKAGE_ID=$(peer lifecycle chaincode calculatepackageid kbaelectronics.tar.gz)

############## peer0_Manufacturer terminal ##############


peer lifecycle chaincode approveformyorg -o localhost:7050 --ordererTLSHostnameOverride orderer.electronics.com --channelID $CHANNEL_NAME --name KBA-Electronics --version 1.0 --collections-config ../Chaincode/collection-electronics.json --package-id $CC_PACKAGE_ID --sequence 1 --tls --cafile $ORDERER_CA --waitForEvent

############## peer0_Ecom terminal ##############

peer lifecycle chaincode approveformyorg -o localhost:7050 --ordererTLSHostnameOverride orderer.electronics.com --channelID $CHANNEL_NAME --name KBA-Electronics --version 1.0 --collections-config ../Chaincode/collection-electronics.json --package-id $CC_PACKAGE_ID --sequence 1 --tls --cafile $ORDERER_CA --waitForEvent

############## peer0_Delivery terminal ##############

peer lifecycle chaincode approveformyorg -o localhost:7050 --ordererTLSHostnameOverride orderer.electronics.com --channelID $CHANNEL_NAME --name KBA-Electronics --version 1.0 --collections-config ../Chaincode/collection-electronics.json --package-id $CC_PACKAGE_ID --sequence 1 --tls --cafile $ORDERER_CA --waitForEvent

############## peer0_Manufacturer terminal ##############


peer lifecycle chaincode checkcommitreadiness --channelID $CHANNEL_NAME --name KBA-Electronics --version 1.0 --sequence 1 --collections-config ../Chaincode/collection-electronics.json --tls --cafile $ORDERER_CA --output json

peer lifecycle chaincode commit -o localhost:7050 --ordererTLSHostnameOverride orderer.electronics.com --channelID $CHANNEL_NAME --name KBA-Electronics --version 1.0 --sequence 1 --collections-config ../Chaincode/collection-electronics.json --tls --cafile $ORDERER_CA --peerAddresses localhost:7051 --tlsRootCertFiles $ORG1_PEER_TLSROOTCERT --peerAddresses localhost:9051 --tlsRootCertFiles $ORG2_PEER_TLSROOTCERT --peerAddresses localhost:11051 --tlsRootCertFiles $ORG3_PEER_TLSROOTCERT

peer lifecycle chaincode querycommitted --channelID $CHANNEL_NAME --name KBA-Electronics --cafile $ORDERER_CA

peer chaincode invoke -o localhost:7050 --ordererTLSHostnameOverride orderer.electronics.com --tls --cafile $ORDERER_CA -C $CHANNEL_NAME -n KBA-Electronics --peerAddresses localhost:7051 --tlsRootCertFiles $ORG1_PEER_TLSROOTCERT --peerAddresses localhost:9051 --tlsRootCertFiles $ORG2_PEER_TLSROOTCERT --peerAddresses localhost:11051 --tlsRootCertFiles $ORG3_PEER_TLSROOTCERT -c '{"function":"CreateElectronic","Args":["Electronic-11", "LG222", "Refrigirator", "Blue", "HYDF-1", "20/10/2019"]}'

peer chaincode query -C $CHANNEL_NAME -n KBA-Electronics -c '{"Args":["GetAllElectronics"]}'


--------Invoke Private Transaction----------

############## peer0_Ecom terminal ##############

export MAKE=$(echo -n "LG111" | base64 | tr -d \\n)

export MODEL=$(echo -n "WashingMachine" | base64 | tr -d \\n)

export COLOR=$(echo -n "White" | base64 | tr -d \\n)

export DEALER_NAME=$(echo -n "XXX" | base64 | tr -d \\n)

peer chaincode invoke -o localhost:7050 --ordererTLSHostnameOverride orderer.electronics.com --tls --cafile $ORDERER_CA -C $CHANNEL_NAME -n KBA-Electronics --peerAddresses localhost:7051 --tlsRootCertFiles $ORG1_PEER_TLSROOTCERT --peerAddresses localhost:9051 --tlsRootCertFiles $ORG2_PEER_TLSROOTCERT --peerAddresses localhost:11051 --tlsRootCertFiles $ORG3_PEER_TLSROOTCERT -c '{"Args":["OrderContract:CreateOrder","LG111"]}' --transient "{\"make\":\"$MAKE\",\"model\":\"$MODEL\",\"color\":\"$COLOR\",\"ecomName\":\"$DEALER_NAME\"}"

peer chaincode query -C $CHANNEL_NAME -n KBA-Electronics -c '{"Args":["OrderContract:ReadOrder","LG111"]}'


--------- Stop the Electronics-network --------------

############## host terminal ##############

docker-compose -f docker/docker-compose-3org.yaml down

docker-compose -f docker/docker-compose-ca.yaml down

docker rm -f $(docker ps -a | awk '($2 ~ /dev-peer.*/) {print $1}')

docker volume rm $(docker volume ls -q)

sudo rm -rf organizations/

sudo rm -rf channel-artifacts/

sudo rm kbaelectronics.tar.gz

docker ps -a

// if there still exists the containers then execute the following commands.

docker rm $(docker container ls -q) --force

docker container prune

docker system prune

docker volume prune

docker network prune

///Run using startElectronicsNetwork.sh script

//Build startElectronicsNetwork.sh script file

chmod +x startElectronicsNetwork.sh

./startElectronicsNetwork.sh

//To submit transaction as ManufacturerMSP

export CHANNEL_NAME=electronicschannel
export FABRIC_CFG_PATH=./peercfg
export CORE_PEER_LOCALMSPID=ManufacturerMSP
export CORE_PEER_TLS_ENABLED=true
export CORE_PEER_TLS_ROOTCERT_FILE=${PWD}/organizations/peerOrganizations/manufacturer.electronics.com/peers/peer0.manufacturer.electronics.com/tls/ca.crt
export CORE_PEER_MSPCONFIGPATH=${PWD}/organizations/peerOrganizations/manufacturer.electronics.com/users/Admin@manufacturer.electronics.com/msp
export CORE_PEER_ADDRESS=localhost:7051
export ORDERER_CA=${PWD}/organizations/ordererOrganizations/electronics.com/orderers/orderer.electronics.com/msp/tlscacerts/tlsca.electronics.com-cert.pem
export ORG1_PEER_TLSROOTCERT=${PWD}/organizations/peerOrganizations/manufacturer.electronics.com/peers/peer0.manufacturer.electronics.com/tls/ca.crt
export ORG2_PEER_TLSROOTCERT=${PWD}/organizations/peerOrganizations/ecom.electronics.com/peers/peer0.ecom.electronics.com/tls/ca.crt
export ORG3_PEER_TLSROOTCERT=${PWD}/organizations/peerOrganizations/delivery.electronics.com/peers/peer0.delivery.electronics.com/tls/ca.crt

peer chaincode invoke -o localhost:7050 --ordererTLSHostnameOverride orderer.electronics.com --tls --cafile $ORDERER_CA -C $CHANNEL_NAME -n KBA-Electronics --peerAddresses localhost:7051 --tlsRootCertFiles $ORG1_PEER_TLSROOTCERT --peerAddresses localhost:9051 --tlsRootCertFiles $ORG2_PEER_TLSROOTCERT --peerAddresses localhost:11051 --tlsRootCertFiles $ORG3_PEER_TLSROOTCERT -c '{"function":"CreateElectronic","Args":["Electronic-11", "LG222", "Refrigirator", "Blue", "HYDF-1", "20/10/2019"]}'

peer chaincode query -C $CHANNEL_NAME -n KBA-Electronics -c '{"Args":["GetAllElectronics"]}'

//To stop the network using script file

//Build stopElectronicsNetwork.sh script file

chmod +x stopElectronicsNetwork.sh

./stopElectronicsNetwork.sh

